<?xml version="1.0" encoding="utf-8"?>
<xs:schema id="ItalyDataSet" targetNamespace="http://tempuri.org/ItalyDataSet.xsd" xmlns:mstns="http://tempuri.org/ItalyDataSet.xsd" xmlns="http://tempuri.org/ItalyDataSet.xsd" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata" xmlns:msprop="urn:schemas-microsoft-com:xml-msprop" attributeFormDefault="qualified" elementFormDefault="qualified">
  <xs:annotation>
    <xs:appinfo source="urn:schemas-microsoft-com:xml-msdatasource">
      <DataSource DefaultConnectionIndex="0" FunctionsComponentName="QueriesTableAdapter" Modifier="AutoLayout, AnsiClass, Class, Public" SchemaSerializationMode="IncludeSchema" xmlns="urn:schemas-microsoft-com:xml-msdatasource">
        <Connections>
          <Connection AppSettingsObjectName="Settings" AppSettingsPropertyName="Italy" ConnectionStringObject="" IsAppSettingsProperty="true" Modifier="Assembly" Name="Italy (Settings)" ParameterPrefix="@" PropertyReference="ApplicationSettings.test2.Properties.Settings.GlobalReference.Default.Italy" Provider="System.Data.SqlClient" />
        </Connections>
        <Tables>
          <TableAdapter BaseClass="System.ComponentModel.Component" DataAccessorModifier="AutoLayout, AnsiClass, Class, Public" DataAccessorName="config_geo_location_synonymTableAdapter" GeneratorDataComponentClassName="config_geo_location_synonymTableAdapter" Name="config_geo_location_synonym" UserDataComponentName="config_geo_location_synonymTableAdapter">
            <MainSource>
              <DbSource ConnectionRef="Italy (Settings)" DbObjectName="Italy.dbo.config_geo_location_synonym" DbObjectType="Table" FillMethodModifier="Public" FillMethodName="Fill" GenerateMethods="Both" GenerateShortCommands="true" GeneratorGetMethodName="GetData" GeneratorSourceName="Fill" GetMethodModifier="Public" GetMethodName="GetData" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetData" UserSourceName="Fill">
                <DeleteCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>DELETE FROM [dbo].[config_geo_location_synonym] WHERE (([location_synonym] = @Original_location_synonym) AND ([geopc_name] = @Original_geopc_name))</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@Original_location_synonym" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="location_synonym" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@Original_geopc_name" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="geopc_name" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </DeleteCommand>
                <InsertCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>INSERT INTO [dbo].[config_geo_location_synonym] ([location_synonym], [geopc_name]) VALUES (@location_synonym, @geopc_name);
SELECT location_synonym, geopc_name FROM config_geo_location_synonym WHERE (geopc_name = @geopc_name) AND (location_synonym = @location_synonym)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@location_synonym" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="location_synonym" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@geopc_name" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="geopc_name" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </InsertCommand>
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>SELECT location_synonym, geopc_name FROM dbo.config_geo_location_synonym</CommandText>
                    <Parameters />
                  </DbCommand>
                </SelectCommand>
                <UpdateCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>UPDATE [dbo].[config_geo_location_synonym] SET [location_synonym] = @location_synonym, [geopc_name] = @geopc_name WHERE (([location_synonym] = @Original_location_synonym) AND ([geopc_name] = @Original_geopc_name));
SELECT location_synonym, geopc_name FROM config_geo_location_synonym WHERE (geopc_name = @geopc_name) AND (location_synonym = @location_synonym)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@location_synonym" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="location_synonym" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@geopc_name" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="geopc_name" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@Original_location_synonym" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="location_synonym" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@Original_geopc_name" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="geopc_name" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </UpdateCommand>
              </DbSource>
            </MainSource>
            <Mappings>
              <Mapping SourceColumn="location_synonym" DataSetColumn="location_synonym" />
              <Mapping SourceColumn="geopc_name" DataSetColumn="geopc_name" />
            </Mappings>
            <Sources />
          </TableAdapter>
        </Tables>
        <Sources />
      </DataSource>
    </xs:appinfo>
  </xs:annotation>
  <xs:element name="ItalyDataSet" msdata:IsDataSet="true" msdata:UseCurrentLocale="true" msprop:EnableTableAdapterManager="True" msprop:Generator_DataSetName="ItalyDataSet" msprop:Generator_UserDSName="ItalyDataSet">
    <xs:complexType>
      <xs:choice minOccurs="0" maxOccurs="unbounded">
        <xs:element name="config_geo_location_synonym" msprop:Generator_TableClassName="config_geo_location_synonymDataTable" msprop:Generator_TableVarName="tableconfig_geo_location_synonym" msprop:Generator_TablePropName="config_geo_location_synonym" msprop:Generator_RowDeletingName="config_geo_location_synonymRowDeleting" msprop:Generator_RowChangingName="config_geo_location_synonymRowChanging" msprop:Generator_RowEvHandlerName="config_geo_location_synonymRowChangeEventHandler" msprop:Generator_RowDeletedName="config_geo_location_synonymRowDeleted" msprop:Generator_UserTableName="config_geo_location_synonym" msprop:Generator_RowChangedName="config_geo_location_synonymRowChanged" msprop:Generator_RowEvArgName="config_geo_location_synonymRowChangeEvent" msprop:Generator_RowClassName="config_geo_location_synonymRow">
          <xs:complexType>
            <xs:sequence>
              <xs:element name="location_synonym" msprop:Generator_ColumnVarNameInTable="columnlocation_synonym" msprop:Generator_ColumnPropNameInRow="location_synonym" msprop:Generator_ColumnPropNameInTable="location_synonymColumn" msprop:Generator_UserColumnName="location_synonym">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="100" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
              <xs:element name="geopc_name" msprop:Generator_ColumnVarNameInTable="columngeopc_name" msprop:Generator_ColumnPropNameInRow="geopc_name" msprop:Generator_ColumnPropNameInTable="geopc_nameColumn" msprop:Generator_UserColumnName="geopc_name">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="80" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
            </xs:sequence>
          </xs:complexType>
        </xs:element>
      </xs:choice>
    </xs:complexType>
    <xs:unique name="Constraint1" msdata:PrimaryKey="true">
      <xs:selector xpath=".//mstns:config_geo_location_synonym" />
      <xs:field xpath="mstns:location_synonym" />
      <xs:field xpath="mstns:geopc_name" />
    </xs:unique>
  </xs:element>
</xs:schema>